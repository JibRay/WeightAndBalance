//
//  TableView.swift
//  WeightAndBalance
//
//  Created by Jib Ray on 6/12/23.
//

import SwiftUI

// Table of weight and balance values.
struct TableView: View {
    @State var components = Components()

    let screenWidth = 0.9 * UIScreen.main.bounds.size.width
    let titleFontSize = 18.0
    let valueFontSize = 18.0
    
    // Relative column widths.
    let column1 = 0.31
    let column2 = 0.23
    let column3 = 0.23
    let column4 = 0.23
    
    let readOnlyColor = Color(red: 0.85, green: 0.85, blue: 0.9)

    var body: some View {
        VStack {
            HStack { // Column titles.
                Text(" ")
                    .frame(width: screenWidth * column1)
                    .background(Color.black)
                    .font(.system(size: titleFontSize))
                    .padding(.trailing, -8)
                Text("Weight")
                    .frame(width: screenWidth * column2)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text("Arm")
                    .frame(width: screenWidth * column3)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text("Moment")
                    .frame(width: screenWidth * column4)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
            }
            HStack { // Main gear left
                Text("Main Gear L")
                    .frame(width: screenWidth * column1, alignment: .leading)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.leftMainGear.weightText)
                    .frame(width: screenWidth * column2, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.leftMainGear.armText)
                    .frame(width: screenWidth * column3, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.leftMainGear.momentText)
                    .frame(width: screenWidth * column4, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
            }
            HStack { // Main gear right
                Text("Main Gear R")
                    .frame(width: screenWidth * column1, alignment: .leading)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.rightMainGear.weightText)
                    .frame(width: screenWidth * column2, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.rightMainGear.armText)
                    .frame(width: screenWidth * column3, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.rightMainGear.momentText)
                    .frame(width: screenWidth * column4, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
            }
            HStack { // Tailwheel
                Text("Tailwheel")
                    .frame(width: screenWidth * column1, alignment: .leading)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.tailWheel.weightText)
                    .frame(width: screenWidth * column2, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.tailWheel.armText)
                    .frame(width: screenWidth * column3, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.tailWheel.momentText)
                    .frame(width: screenWidth * column4, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
            }
            HStack { // Front seat
                Text("Front seat")
                    .frame(width: screenWidth * column1, alignment: .leading)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                TextField("", text: $components.frontSeat.weightText,
                          onEditingChanged: {
                            (changed)
                            in components.update() })
                .onTapGesture { components.frontSeat.weightText = ""}
                    .frame(width: screenWidth * column2)
                    .multilineTextAlignment(.trailing)
                    .background(Color.white)
                    .font(.system(size: valueFontSize))
                    .keyboardType(.decimalPad)
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.frontSeat.armText)
                    .frame(width: screenWidth * column3, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.frontSeat.momentText)
                    .frame(width: screenWidth * column4, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
            }.padding(.top, -15.0)
            HStack { // Rear seat
                Text("Rear seat")
                    .frame(width: screenWidth * column1, alignment: .leading)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                TextField("", text: $components.rearSeat.weightText,
                          onEditingChanged: {
                            (changed)
                            in components.update() })
                    .onTapGesture { components.rearSeat.weightText = "" }
                    .frame(width: screenWidth * column2)
                    .multilineTextAlignment(.trailing)
                    .background(Color.white)
                    .font(.system(size: valueFontSize))
                    .keyboardType(.decimalPad)
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.rearSeat.armText)
                    .frame(width: screenWidth * column3, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.rearSeat.momentText)
                    .frame(width: screenWidth * column4, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
            }.padding(.top, -15.0)
            HStack { // Baggage
                Text("Baggage")
                    .frame(width: screenWidth * column1, alignment: .leading)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                TextField("", text: $components.baggage.weightText,
                          onEditingChanged: {
                            (changed)
                            in components.update() })
                    .onTapGesture { components.baggage.weightText = "" }
                    .frame(width: screenWidth * column2)
                    .multilineTextAlignment(.trailing)
                    .background(Color.white)
                    .font(.system(size: valueFontSize))
                    .keyboardType(.decimalPad)
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.baggage.armText)
                    .frame(width: screenWidth * column3, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.baggage.momentText)
                    .frame(width: screenWidth * column4, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
            }.padding(.top, -15.0)
            HStack { // Fuel
                Text("Fuel")
                    .frame(width: screenWidth * column1, alignment: .leading)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                TextField("", text: $components.fuel.weightText,
                          onEditingChanged: {
                            (changed)
                            in components.update() })
                    .onTapGesture { components.fuel.weightText = "" }
                    .frame(width: screenWidth * column2)
                    .multilineTextAlignment(.trailing)
                    .background(Color.white)
                    .font(.system(size: valueFontSize))
                    .keyboardType(.decimalPad)
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.fuel.armText)
                    .frame(width: screenWidth * column3, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.fuel.momentText)
                    .frame(width: screenWidth * column4, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
            }.padding(.top, -15.0)
            HStack { // Totals
                Text("Totals")
                    .frame(width: screenWidth * column1, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: titleFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.totalWeightText)
                    .frame(width: screenWidth * column2, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(" ")
                    .frame(width: screenWidth * column3, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
                    .padding(.trailing, -8)
                Text(components.totalMomentText)
                    .frame(width: screenWidth * column4, alignment: .trailing)
                    .background(readOnlyColor)
                    .font(.system(size: valueFontSize))
                    .border(.blue)
            }.padding(.top, -15.0)
            Text(components.summaryText)
                .frame(width: screenWidth, alignment: .center)
                .background(readOnlyColor)
                .font(.system(size: valueFontSize))
                .border(.blue)
        }
    }
}

